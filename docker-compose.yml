services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.5
    container_name: elastic_search_container
#    volumes:
#      - esdata01:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'
    environment:
      - node.name=es01
      - cluster.name=docker-cluster
      #- cluster.initial_master_nodes=es01
      - ELASTIC_PASSWORD=1234
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - xpack.license.self_generated.type=${LICENSE}
      - discovery.type=single-node
      - xpack.security.enabled=false

    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 4g
    networks:
      - es-network
    volumes:
      - erp_volume_data:/var/opt/erp

  kibana:
    image: kibana:7.9.2
#    volumes:
#      - kibanadata:/usr/share/kibana/data
    ports:
      - '5601:5601'
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://es01:9200
      - ELASTICSEARCH_URL =http://es01:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=1234
    networks:
      - es-network
    volumes:
      - erp_volume_data:/var/opt/erp

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182  # Change the internal port to 2182
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2182:2182  # Expose the updated port 2182 on the host

  broker:
      image: confluentinc/cp-kafka:7.4.0
      depends_on:
        - zookeeper
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2182  # Update Zookeeper connection port
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ports:
        - 9092:9092

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    ports:
      - "8085:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
  kafka-ui:
      container_name: kafka-ui
      image: provectuslabs/kafka-ui:latest
      ports:
        - "8086:8080"
      depends_on:
        - broker
        - schema-registry
      environment:
        KAFKA_CLUSTERS_NAME: local
        KAFKA_CLUSTERS_BOOTSTRAPSERVERS: broker:29092
        KAFKA_CLUSTERS_SCHEMAREGISTRY: http://schema-registry:8081
        DYNAMIC_CONFIG_ENABLED: 'true'

networks:
  es-network:
    driver: bridge

volumes:
  erp_volume_data:
    driver: local